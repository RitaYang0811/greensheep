import{y as c,z as o}from"./index-YmKfqLRp.js";const n=c("searchStore",{state:()=>({searchQuery:""}),actions:{setSearchWord(e){this.searchQuery=e,console.log("store搜索詞",this.searchQuery)}}});var a={VITE_APP_API_URL:"https://ec-course-api.hexschool.io/v2",VITE_APP_API_NAME:"greensheep",BASE_URL:"/greensheep/",MODE:"production",DEV:!1,PROD:!0,SSR:!1};const{VITE_APP_API_URL:r,VITE_APP_API_NAME:i}=a,l=c("productStore",{state:()=>({products:[],categoryProducts:[],currentProducts:[],currentPage:1,category:"全部商品 ALL",categories:["項鍊 PENDANT","戒指 RING","耳環 EARRINGS","手鍊 BRACELET","客製設計 CUSTOMIZED ","其他配件 OTHERS"],productInfo:{},recommendProducts:[],isLoading:!1,loadingStatus:{loadingGetProducts:!1,loadingGetProduct:!1,loadingFilterProducts:!1}}),actions:{async getProducts(){this.isLoading=!0;const e=`${r}/api/${i}/products/all`;try{const t=await o.get(e);this.products=t.data.products,this.getSort("new"),this.categoryProducts=this.products,this.currentProducts=this.products.slice((this.currentPage-1)*12,this.currentPage*12)}catch(t){alert(t.data.message)}this.isLoading=!1},getSort(e){if(e==="new")return this.showTitle="最近更新",console.log("1"),this.products.sort((t,s)=>s.updateTime-t.updateTime);if(e==="priceH2L")return this.showTitle="價格 - 由高到低",console.log("2"),this.products.sort((t,s)=>s.price-t.price);if(e==="priceL2H")return this.showTitle="價格 - 由低到高",console.log("2"),this.products.sort((t,s)=>t.price-s.price);if(e==="timeN2O")return this.showTitle="上架時間 - 由新到舊",console.log("3"),this.products.sort((t,s)=>s.createTime-t.createTime);if(e==="timeO2N")return this.showTitle="上架時間 - 由舊到新",console.log("4"),this.products.sort((t,s)=>t.createTime-s.createTime)},getFilterProducts(e,t=1,s){this.loadingStatus.loadingFilterProducts=!0,this.category=e,e==="全部商品 ALL"||e===""?(this.category="全部商品 ALL",this.currentPage=1,this.getSort(s),console.log(s),this.categoryProducts=this.products,this.currentProducts=this.categoryProducts.slice((t-1)*12,t*12),this.loadingStatus.loadingFilterProducts=!1):e&&(console.log("@@@"),this.getSort(s),this.categoryProducts=this.products.filter(d=>d.category===e),this.currentProducts=this.categoryProducts.slice((t-1)*12,t*12),this.loadingStatus.loadingFilterProducts=!1)},async getProductInfo(e){this.loadingStatus.loadingGetProduct=!0;const t=`${r}/api/${i}/product/${e}`;try{const s=await o.get(t);console.log(s.data),this.productInfo=s.data.product}catch(s){console.error(s)}finally{this.loadingStatus.loadingGetProduct=!1}},async getRecommendProducts(e){for(this.recommendProducts=[];this.recommendProducts.length<4;){const t=this.products[Math.floor(Math.random()*this.products.length)];(!this.recommendProducts.includes(t)||e===this.recommendProducts.id)&&this.recommendProducts.push(t)}}}});export{l as p,n as s};
